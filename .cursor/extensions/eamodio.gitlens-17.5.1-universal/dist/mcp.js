exports.id=729,exports.ids=[729],exports.modules={1524:(e,i,t)=>{t.r(i),t.d(i,{GkMcpProvider:()=>GkMcpProvider});var r=t(1398),n=t(2110),o=t(9252),s=t(6623),a=t(3493),c=Object.defineProperty,g=Object.getOwnPropertyDescriptor;let l=/checking for updates.../i;let GkMcpProvider=class GkMcpProvider{constructor(e){this.container=e,this._disposable=r.Disposable.from(this.container.storage.onDidChange(e=>this.checkStorage(e)),r.lm.registerMcpServerDefinitionProvider("gitlens.gkMcpProvider",this))}_disposable;_onDidChangeMcpServerDefinitions=new r.EventEmitter;get onDidChangeMcpServerDefinitions(){return this._onDidChangeMcpServerDefinitions.event}checkStorage(e){(null==e||e.keys.includes("gk:cli:install"))&&this._onDidChangeMcpServerDefinitions.fire()}async provideMcpServerDefinitions(){let e=await this.getMcpConfigurationFromCLI();return null==e?[]:[new r.McpStdioServerDefinition(`${e.name} (bundled with GitLens)`,e.command,e.args,{},e.version)]}async getMcpConfigurationFromCLI(){let e=this.container.storage.get("gk:cli:install"),i=this.container.storage.get("gk:cli:path");if(e?.status!=="completed"||!i)return;let t=(0,a.Sl)(await (0,n.d5)());if(null==t)return;let o=await (0,a.XH)(["mcp","config",t,"--source=gitlens",`--scheme=${r.env.uriScheme}`],{cwd:i});o=o.replace(l,"").trim();try{let i=JSON.parse(o);return this.notifyRegistrationCompleted(e.version),{name:i.name,type:i.type,command:i.command,args:i.args,version:e.version}}catch(i){s.Vy.error(`Error getting MCP configuration: ${i}`),this.notifyRegistrationFailed("Error getting MCP configuration",void 0,e.version)}}notifyRegistrationCompleted(e){this.container.telemetry.enabled&&this.container.telemetry.setGlobalAttribute("gk.mcp.registrationCompleted",!0)}notifyRegistrationFailed(e,i,t){this.container.telemetry.enabled&&this.container.telemetry.sendEvent("mcp/registration/failed",{reason:e,"error.message":i,source:"gk-mcp-provider","cli.version":t})}dispose(){this._disposable.dispose(),this._onDidChangeMcpServerDefinitions.dispose()}};((e,i,t,r)=>{for(var n,o=g(i,t),s=e.length-1;s>=0;s--)(n=e[s])&&(o=(r?n(i,t,o):n(o))||o);return r&&o&&c(i,t,o)})([(0,o.Rm)()],GkMcpProvider.prototype,"getMcpConfigurationFromCLI",1)}};